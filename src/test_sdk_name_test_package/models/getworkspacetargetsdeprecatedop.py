"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from test_sdk_name_test_package.types import BaseModel
from test_sdk_name_test_package.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetWorkspaceTargetsDeprecatedGlobalsTypedDict(TypedDict):
    workspace_id: NotRequired[str]


class GetWorkspaceTargetsDeprecatedGlobals(BaseModel):
    workspace_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None


class GetWorkspaceTargetsDeprecatedRequestTypedDict(TypedDict):
    workspace_id: NotRequired[str]
    r"""Unique identifier of the workspace."""
    after_last_event_created_at: NotRequired[datetime]
    r"""Filter to only return targets with events created after this timestamp"""


class GetWorkspaceTargetsDeprecatedRequest(BaseModel):
    workspace_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""Unique identifier of the workspace."""

    after_last_event_created_at: Annotated[
        Optional[datetime],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Filter to only return targets with events created after this timestamp"""
