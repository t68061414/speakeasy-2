"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .interactiontype import InteractionType
from test_sdk_name_test_package.types import BaseModel
from test_sdk_name_test_package.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SearchWorkspaceEventsGlobalsTypedDict(TypedDict):
    workspace_id: NotRequired[str]


class SearchWorkspaceEventsGlobals(BaseModel):
    workspace_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None


class SearchWorkspaceEventsRequestTypedDict(TypedDict):
    workspace_id: NotRequired[str]
    r"""Unique identifier of the workspace."""
    source_revision_digest: NotRequired[str]
    r"""Unique identifier of the source revision digest."""
    lint_report_digest: NotRequired[str]
    r"""Unique identifier of the lint report digest."""
    openapi_diff_report_digest: NotRequired[str]
    r"""Unique identifier of the openapi diff report digest."""
    interaction_type: NotRequired[InteractionType]
    r"""Specified interaction type for events."""
    generate_gen_lock_id: NotRequired[str]
    r"""A specific gen lock ID for the events."""
    execution_id: NotRequired[str]
    r"""Shared execution ID for cli events across a single action."""
    success: NotRequired[bool]
    r"""Whether the event was successful or not."""
    limit: NotRequired[int]
    r"""Number of results to return."""


class SearchWorkspaceEventsRequest(BaseModel):
    workspace_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""Unique identifier of the workspace."""

    source_revision_digest: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Unique identifier of the source revision digest."""

    lint_report_digest: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Unique identifier of the lint report digest."""

    openapi_diff_report_digest: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Unique identifier of the openapi diff report digest."""

    interaction_type: Annotated[
        Optional[InteractionType],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Specified interaction type for events."""

    generate_gen_lock_id: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A specific gen lock ID for the events."""

    execution_id: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Shared execution ID for cli events across a single action."""

    success: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Whether the event was successful or not."""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Number of results to return."""
