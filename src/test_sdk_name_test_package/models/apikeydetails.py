"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .accounttype import AccountType
from datetime import datetime
import pydantic
from pydantic.functional_validators import PlainValidator
from test_sdk_name_test_package.types import BaseModel
from test_sdk_name_test_package.utils import validate_open_enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class APIKeyDetailsTypedDict(TypedDict):
    workspace_id: str
    workspace_slug: str
    org_slug: str
    account_type_v2: AccountType
    enabled_features: List[str]
    telemetry_disabled: bool
    workspace_created_at: datetime
    r"""Workspace creation timestamp."""
    generation_access_unlimited: NotRequired[bool]
    feature_flags: NotRequired[List[str]]


class APIKeyDetails(BaseModel):
    workspace_id: str

    workspace_slug: str

    org_slug: str

    account_type_v2: Annotated[AccountType, PlainValidator(validate_open_enum(False))]

    enabled_features: List[str]

    telemetry_disabled: bool

    workspace_created_at: datetime
    r"""Workspace creation timestamp."""

    generation_access_unlimited: Optional[bool] = None

    feature_flags: Annotated[
        Optional[List[str]],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
    ] = None
