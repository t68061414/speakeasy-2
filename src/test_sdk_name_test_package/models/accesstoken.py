"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .accounttype import AccountType
from .featureflag import FeatureFlag, FeatureFlagTypedDict
from datetime import datetime
from pydantic.functional_validators import PlainValidator
from test_sdk_name_test_package.types import BaseModel
from test_sdk_name_test_package.utils import validate_open_enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ClaimsTypedDict(TypedDict):
    pass


class Claims(BaseModel):
    pass


class AccessTokenUserTypedDict(TypedDict):
    email: NotRequired[str]
    id: NotRequired[str]
    display_name: NotRequired[str]
    admin: NotRequired[bool]
    created_at: NotRequired[datetime]
    email_verified: NotRequired[bool]


class AccessTokenUser(BaseModel):
    email: Optional[str] = None

    id: Optional[str] = None

    display_name: Optional[str] = None

    admin: Optional[bool] = None

    created_at: Optional[datetime] = None

    email_verified: Optional[bool] = None


class WorkspacesModelTypedDict(TypedDict):
    id: NotRequired[str]
    name: NotRequired[str]
    updated_at: NotRequired[datetime]
    account_type: NotRequired[AccountType]


class WorkspacesModel(BaseModel):
    id: Optional[str] = None

    name: Optional[str] = None

    updated_at: Optional[datetime] = None

    account_type: Annotated[
        Optional[AccountType], PlainValidator(validate_open_enum(False))
    ] = None


class AccessTokenTypedDict(TypedDict):
    r"""An AccessToken is a token that can be used to authenticate with the Speakeasy API."""

    access_token: str
    claims: ClaimsTypedDict
    user: AccessTokenUserTypedDict
    workspaces: NotRequired[List[WorkspacesModelTypedDict]]
    feature_flags: NotRequired[List[FeatureFlagTypedDict]]


class AccessToken(BaseModel):
    r"""An AccessToken is a token that can be used to authenticate with the Speakeasy API."""

    access_token: str

    claims: Claims

    user: AccessTokenUser

    workspaces: Optional[List[WorkspacesModel]] = None

    feature_flags: Optional[List[FeatureFlag]] = None
